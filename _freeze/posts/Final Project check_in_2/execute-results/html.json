{
  "hash": "8ddd4054e89bb67af826d2b75d61b56c",
  "result": {
    "markdown": "---\ntitle: \"Final Project check-in (1) \"\nauthor: \"Diana Rinker\"\ndescription: \"Final project (1)\"\ndate: \"3/27/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n## DACSS 603, spring 2023\n\n## Final Project check-in (1), Diana Rinker.\n\n# Online engagement\n\nIt is well known that online engagement with the web resource is a\nhighly valuable metric and is driving site revenue. However, engagement\nand popularity might also be associated with other factors, that\nwebsties are trying to avoid, such as online violence, inappropriate\nbehavior and misinformation.This research project is exploring whith\nfactos impact readers engagement in social media conversations.\n\nTo do that I will use the data from an online blog on the news website.\nThe author of this blog is posting weekly articles about interpersonal\nrelationships, that are formulated as a letter to to the author, where\nthe author gives an advice about the situation. Readers are free to\ncomment under each post, but cannot make their own posts.\n\nUsing this data set, I will explore how engagement of readers of a news\nblog connected with variety of factors, such blogs's author engagement ,\ntopic of the post, source of readers and readers inappropriate online\nbehavior.\n\nMy research question is: Does the authors engagement in the conversation\naround the post makes readers more engaged and promotes positive\ninteractions among them?\n\n**DV:** My dependent construct is **\"user's engagement**\", I will\nmeasure users' engagement at the level of individual post, using the\nfollowing variables\n\nL1 - page viewers View page\n\nL2 - page readers \\* Reveal letter \\* Reveal comments\n\nL3 - logged in \\* Login / sign up \\* Up / down vote\n\nL4 - commenter Comment\n\n**IV:** My main independent variable is **Blog's author engagement.** I\nwill measure authors engagement as the factor variable, with the\nfollowing levels:\n\nA. Unspecified comment\n\nB. Featured comment\n\nC. Engagement in conversation\n\nTo control for **confounders,** I will also measure the follwing\nvariables:\n\n1.  Topic of the post (\"post tag\"), categorical variable.\n\n2.  Source of the readers, also categorical variable.\n\n3.  Mood of the conversation , derivative continuous variable calculated\n    as the ratio of \"likes\" to \"dislikes\".\n\n4.  Blocked and flagged comments.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8     ✔ purrr   1.0.1\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n# Data\n\nTo answer my research question I will use two datasets. the first data\nset has information about all comments associated with each post by post\nID. The second data set is analytics data for the web bage. It contains\none post per row and variables describe each post as a whole without\nbreaking down to the comment level.\n\nIn this project I will analyze posts for January 2021 - February 2023.\n\nFirst, I will load the data set with the comment level data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C:/Users/Diana/OneDrive - University Of Massachusetts Medical School/Documents/R/R working directory/DACSS/603/603_Spring_2023/posts\"\n```\n:::\n\n```{.r .cell-code}\nraw <- as_tibble (read_csv(\"C:\\\\Users\\\\Diana\\\\OneDrive - University Of Massachusetts Medical School\\\\Documents\\\\R\\\\R working directory\\\\DACSS\\\\603\\\\my study files for dacss603\\\\globe\\\\ data.2021.plus.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 105136 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): content, user_name, display_name, image_url, email, approved\ndbl  (7): message_id, post_id, user_id, parent, absolute_likes, absolute_dis...\nlgl  (3): email_verified, created_at, private_profile\ndttm (1): written_at\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncomments.data<-raw \ncolnames (comments.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"content\"           \"message_id\"        \"post_id\"          \n [4] \"user_id\"           \"user_name\"         \"display_name\"     \n [7] \"image_url\"         \"email\"             \"email_verified\"   \n[10] \"created_at\"        \"private_profile\"   \"approved\"         \n[13] \"written_at\"        \"parent\"            \"absolute_likes\"   \n[16] \"absolute_dislikes\" \"comment.year\"     \n```\n:::\n\n```{.r .cell-code}\nhead(comments.data$written_at)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-01-01 08:28:44 UTC\" \"2021-01-01 08:57:08 UTC\"\n[3] \"2021-01-01 10:36:58 UTC\" \"2021-01-01 11:13:13 UTC\"\n[5] \"2021-01-01 12:27:44 UTC\" \"2021-01-01 12:51:48 UTC\"\n```\n:::\n\n```{.r .cell-code}\ncomments.data <-comments.data%>%\n              mutate(com.year = format(written_at,format = \"%Y\" ))\nrange(comments.data$com.year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021\" \"2023\"\n```\n:::\n:::\n\n\n\\# Variable description\n\nTo begin, I will review available variables and describe how I will use\nthem to measure my constructs.\n\n\\### Dependent variable. User engagement.\n\nMy dependent construct is \\*\\*user's engagement\\*\\*, I will measure\nusers\n\nengagement at the level of individual post. There are following metrics\nthat I could use for engagement. Each of them represent a different\naspect of eaders engagement. I will review existing data on these\nmeasures and , based on their variability , will select which one is to\nuse as DV for my hypothesis.\n\nEngagement metrics\n\nThe levels below could be used to describe individual user's engagement\nat the time of the viusit of the site.\n\nL1 - page viewers View page\n\nL2 - page readers\n\n\\\\\\* Reveal letter\n\n\\\\\\* Reveal comments\n\nL3 - logged in\n\n\\\\\\* Login / sign up\n\n\\\\\\* Up / down vote\n\nL4 - commenter Comments\n\nthe following metrics could lso be considered a way to measure ngagement\nat the post level:\n\nExit rate per post: represents number of people who visited the page\nonly and then left the website (oppsed to staying on the website and\nreading other articles).\n\n\n### Page views\nThis is the most general engagement metric,  representing how many views the post received. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged <- as_tibble (read_csv(\"C:\\\\Users\\\\Diana\\\\OneDrive - University Of Massachusetts Medical School\\\\Documents\\\\R\\\\R working directory\\\\DACSS\\\\603\\\\my study files for dacss603\\\\globe\\\\data.merged.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 535 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (3): Letter, Exit rate, post.month\ndbl  (18): Page views, Search + amp referral visits, Direct (non-email) refe...\nnum   (1): Visits when post was on LL HP\ndate  (1): post.date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstr(merged)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [535 × 23] (S3: tbl_df/tbl/data.frame)\n $ post.date                         : Date[1:535], format: \"2021-01-04\" \"2021-01-05\" ...\n $ Letter                            : chr [1:535] \"love letters | blog | I don&'t want him to let me go\" \"love letters | blog | Should I be working to get her back?\" \"love letters | blog | I&'m sick of thinking about the breakup\" \"love letters | blog | I don&'t want to be selfish about 2020 Christmas\" ...\n $ Page views                        : num [1:535] 14830 12067 11921 12817 12866 ...\n $ Search + amp referral visits      : num [1:535] 1005 822 793 765 934 ...\n $ Direct (non-email) referral visits: num [1:535] 10005 7948 7997 8746 8400 ...\n $ Visits                            : num [1:535] 12998 10391 10331 11040 10818 ...\n $ Uniques                           : num [1:535] 11453 8985 8917 9662 8564 ...\n $ Other website referral visits     : num [1:535] 129 232 106 152 139 153 165 157 85 151 ...\n $ Social referral visits            : num [1:535] 457 94 156 106 113 368 90 171 84 129 ...\n $ BDC referral visits               : num [1:535] 7087 5312 5185 5901 4570 ...\n $ Visits when post was on LL HP     : num [1:535] 3167 3323 2929 3056 4795 ...\n $ Exits                             : num [1:535] 9679 7549 7613 8188 7900 ...\n $ Exit rate                         : chr [1:535] \"74%\" \"73%\" \"74%\" \"74%\" ...\n $ dup                               : num [1:535] 0 0 0 0 0 0 0 0 0 0 ...\n $ post_id                           : num [1:535] 27071003 27070997 27070991 27070985 27070979 ...\n $ n.comments                        : num [1:535] 267 207 266 372 319 267 337 154 179 375 ...\n $ post.year                         : num [1:535] 2021 2021 2021 2021 2021 ...\n $ post.month                        : chr [1:535] \"01\" \"01\" \"01\" \"01\" ...\n $ post.likes                        : num [1:535] 1440 864 936 1497 1145 ...\n $ post.dislikes                     : num [1:535] 72 106 96 520 154 188 150 62 106 150 ...\n $ post.total.likes                  : num [1:535] 1512 970 1032 2017 1299 ...\n $ blocked.sum                       : num [1:535] 1 2 3 9 2 3 4 0 3 3 ...\n $ pct.positive                      : num [1:535] 95.2 89.1 90.7 74.2 88.1 ...\n```\n:::\n\n```{.r .cell-code}\nmerged$post.month <-as.numeric(merged$post.month)\nmerged$year_month <- paste0(merged$post.year, \"-\", sprintf(\"%02d\", merged$post.month))\n\nggplot( data=merged, mapping=aes(y=`Page views`, x=merged$year_month))+\n          geom_boxplot()+\n  labs(title=\"Number of post wiews per month\", x=\"Month\", y=\"Number of vews\")+ \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Use of `merged$year_month` is discouraged.\nℹ Use `year_month` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Final-Project-check_in_2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nFrom this graph we can see that the numbers of views is increasing with time\n\n\n### Number of comments, distributed by month\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged$year_month \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\"\n  [8] \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\"\n [15] \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" \"2021-02\" \"2021-02\"\n [22] \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\"\n [29] \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\"\n [36] \"2021-02\" \"2021-02\" \"2021-02\" \"2021-02\" \"2021-03\" \"2021-03\" \"2021-03\"\n [43] \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\"\n [50] \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\"\n [57] \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-03\" \"2021-04\"\n [64] \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\"\n [71] \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\"\n [78] \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\" \"2021-04\"\n [85] \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\"\n [92] \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\"\n [99] \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-05\" \"2021-06\"\n[106] \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\"\n[113] \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\"\n[120] \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\" \"2021-06\"\n[127] \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\"\n[134] \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\"\n[141] \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\" \"2021-07\"\n[148] \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\"\n[155] \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\"\n[162] \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\" \"2021-08\"\n[169] \"2021-08\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\"\n[176] \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\"\n[183] \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\" \"2021-09\"\n[190] \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\"\n[197] \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\"\n[204] \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-10\" \"2021-11\" \"2021-11\"\n[211] \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\"\n[218] \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\" \"2021-11\"\n[225] \"2021-11\" \"2021-11\" \"2021-11\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\"\n[232] \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\"\n[239] \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\" \"2021-12\"\n[246] \"2021-12\" \"2021-12\" \"2021-12\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\"\n[253] \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\"\n[260] \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\" \"2022-01\"\n[267] \"2022-01\" \"2022-01\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\"\n[274] \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\"\n[281] \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\" \"2022-02\"\n[288] \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\"\n[295] \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\"\n[302] \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\"\n[309] \"2022-03\" \"2022-03\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\"\n[316] \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\"\n[323] \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\" \"2022-04\"\n[330] \"2022-04\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\"\n[337] \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\"\n[344] \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\" \"2022-05\"\n[351] \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\"\n[358] \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\"\n[365] \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\" \"2022-06\"\n[372] \"2022-06\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\"\n[379] \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\"\n[386] \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-07\" \"2022-08\"\n[393] \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\"\n[400] \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\"\n[407] \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\" \"2022-08\"\n[414] \"2022-08\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\"\n[421] \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\"\n[428] \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\" \"2022-09\"\n[435] \"2022-09\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\"\n[442] \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\"\n[449] \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\" \"2022-10\"\n[456] \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\"\n[463] \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\"\n[470] \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-11\" \"2022-12\"\n[477] \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\"\n[484] \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\"\n[491] \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2022-12\" \"2023-01\" \"2023-01\"\n[498] \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\"\n[505] \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\"\n[512] \"2023-01\" \"2023-01\" \"2023-01\" \"2023-01\" \"2023-02\" \"2023-02\" \"2023-02\"\n[519] \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\"\n[526] \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\" \"2023-02\"\n[533] \"2023-02\" \"2023-02\" \"2023-03\"\n```\n:::\n\n```{.r .cell-code}\nggplot(merged, mapping = aes(x=year_month , y=n.comments, fill=year_month ))+\n  geom_boxplot() +\n  labs(title = \"distribution of comments per post \", y = \"Number of comments\" )+\n  scale_y_continuous(breaks = seq (from=0, to= 10000, by= 100)) + \n     theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Final-Project-check_in_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(merged)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [535 × 24] (S3: tbl_df/tbl/data.frame)\n $ post.date                         : Date[1:535], format: \"2021-01-04\" \"2021-01-05\" ...\n $ Letter                            : chr [1:535] \"love letters | blog | I don&'t want him to let me go\" \"love letters | blog | Should I be working to get her back?\" \"love letters | blog | I&'m sick of thinking about the breakup\" \"love letters | blog | I don&'t want to be selfish about 2020 Christmas\" ...\n $ Page views                        : num [1:535] 14830 12067 11921 12817 12866 ...\n $ Search + amp referral visits      : num [1:535] 1005 822 793 765 934 ...\n $ Direct (non-email) referral visits: num [1:535] 10005 7948 7997 8746 8400 ...\n $ Visits                            : num [1:535] 12998 10391 10331 11040 10818 ...\n $ Uniques                           : num [1:535] 11453 8985 8917 9662 8564 ...\n $ Other website referral visits     : num [1:535] 129 232 106 152 139 153 165 157 85 151 ...\n $ Social referral visits            : num [1:535] 457 94 156 106 113 368 90 171 84 129 ...\n $ BDC referral visits               : num [1:535] 7087 5312 5185 5901 4570 ...\n $ Visits when post was on LL HP     : num [1:535] 3167 3323 2929 3056 4795 ...\n $ Exits                             : num [1:535] 9679 7549 7613 8188 7900 ...\n $ Exit rate                         : chr [1:535] \"74%\" \"73%\" \"74%\" \"74%\" ...\n $ dup                               : num [1:535] 0 0 0 0 0 0 0 0 0 0 ...\n $ post_id                           : num [1:535] 27071003 27070997 27070991 27070985 27070979 ...\n $ n.comments                        : num [1:535] 267 207 266 372 319 267 337 154 179 375 ...\n $ post.year                         : num [1:535] 2021 2021 2021 2021 2021 ...\n $ post.month                        : num [1:535] 1 1 1 1 1 1 1 1 1 1 ...\n $ post.likes                        : num [1:535] 1440 864 936 1497 1145 ...\n $ post.dislikes                     : num [1:535] 72 106 96 520 154 188 150 62 106 150 ...\n $ post.total.likes                  : num [1:535] 1512 970 1032 2017 1299 ...\n $ blocked.sum                       : num [1:535] 1 2 3 9 2 3 4 0 3 3 ...\n $ pct.positive                      : num [1:535] 95.2 89.1 90.7 74.2 88.1 ...\n $ year_month                        : chr [1:535] \"2021-01\" \"2021-01\" \"2021-01\" \"2021-01\" ...\n```\n:::\n\n```{.r .cell-code}\nmerged$`Exit rate` <- as.numeric(sub(\"%\", \"\", merged$`Exit rate`)) / 100\n\n\nggplot(merged, mapping = aes(x=year_month , y=`Exit rate`, fill=year_month ))+\n  geom_boxplot() +\n  labs(title = \"distribution of `Exit rate` per post \", y = \"Exit rate\" , x=\"Month\")+ \n     theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Final-Project-check_in_2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n### Independent variables\n\n## Authors comments\n\n\n\n\n\n### Mood of the post.\n\nis a numerical variable.Since each comment has a certain number of\n\"thumbs up\" or \"thumbs down\". I will use this variable to calculate\noverall \"mood\" of the post.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# # grouped<-comments.2022 %>%\n# #   group_by (post_id)%>%\n# #   summarise(n.comments=n(), \n# #             post.month = format(first(written_at),format = \"%m\" ),\n# #             likes.sum = sum(absolute_likes), \n# #             dislikes.sum=sum (absolute_dislikes))\n# # grouped <-  grouped%>%\n# #    mutate(mood =  likes.sum/dislikes.sum)  \n# #  grouped <- grouped %>%\n# #   mutate(mood = ifelse(is.nan(likes.sum/dislikes.sum), 0, likes.sum/dislikes.sum))\n# #  \n grouped<-comments.2022 %>%\n      group_by (post_id)%>%\n      summarise(n.comments=n(),\n            post.month = format(first(written_at),format = \"%m\" ),\n            likes.sum = sum(absolute_likes),\n            dislikes.sum=sum (absolute_dislikes),\n            blocked.sum= sum(approved==\"blocked\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., post_id): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\n  grouped<-grouped %>%\n mutate(    pct.positive =likes.sum/(likes.sum+dislikes.sum)*100,\n            pct.negative =-1(dislikes.sum/(likes.sum+dislikes.sum))*100\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., pct.positive = likes.sum/(likes.sum + dislikes.sum) * : object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\n# \n# ggplot(grouped, mapping = aes( x=pct.positive))+\n#   geom_baoxplot()  +\n#   labs(title = \"Overall mood distribution\" )\n```\n:::\n\n\nThan I visualize distribution of mood by months, nd overal variability\nof a mood score:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(grouped, mapping = aes(x= post.month, y=mood.score))+\n  geom_boxplot()  +\n  labs(title = \"Distribution of mood by month \", y = \"Post mood\" )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(grouped, mapping = aes(x = post.month, y = mood.score)): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(grouped, mapping = aes( y=mood.score))+\n  geom_boxplot()  +\n  labs(title = \"Overall mood distribution \" )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(grouped, mapping = aes(y = mood.score)): object 'grouped' not found\n```\n:::\n:::\n\n\nThis is showing that there are\n\nWe can also check the connection between positive and negative\nsentiment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx.lm<-lm(pct.positive ~ pct.negative, data = grouped)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nplot ( data = grouped, pct.negative ~ pct.positive )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(m$data, eframe): object 'grouped' not found\n```\n:::\n:::\n\n\nIt falls perfectly on linear regression line, with positive and negative\nvalues strongly negatively correlated.\n\n### Blocked comments per post.\n\nNow I will visualize amount of blocked comments per post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(comments.2022)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(grouped, mapping = aes(x= post.month, y=blocked.sum))+\n  geom_boxplot() +\n labs(title = \"Blockeed comments per month\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(grouped, mapping = aes(x = post.month, y = blocked.sum)): object 'grouped' not found\n```\n:::\n:::\n\n\n### Blocked comments and Post mood:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(blocked.sum ~ mood.score, data= grouped )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(m$data, eframe): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(grouped)  \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(grouped): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nfit <- lm(blocked.sum ~ mood.score, data = grouped)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(grouped$mood.score))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(fit): object 'fit' not found\n```\n:::\n:::\n\n\n### \n\nThis variable indicates the date of the comment. Using the range of the\ndates per post, I can estimate how long each post was in active\ndiscussion. Later I can compare it with the views of the same post\ncoming from the third dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# MG.comments<-comments.2022[grep(\"MeredithGoldstein\", comments.2022$user_name, ignore.case = TRUE), ]\n\ncomments.2022$user_name<-  ifelse (is.na(comments.2022$user_name), 0, comments.2022$user_name)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(is.na(comments.2022$user_name), 0, comments.2022$user_name): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\ncomments.2022$mg.comment<-  ifelse (comments.2022$user_name==\"MeredithGoldstein\", 1, 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(comments.2022$user_name == \"MeredithGoldstein\", 1, 0): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\ndim(comments.2022)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\ngrouped<-comments.2022 %>%\n  group_by (post_id)%>%\n  summarise(n.comments=n(), \n            post.month = format(first(written_at),format = \"%m\" ),\n            likes.sum = sum(absolute_likes), \n            dislikes.sum=sum (absolute_dislikes),\n            blocked.sum= sum(approved==\"blocked\"), \n            pct.positive =(sum(absolute_likes)/(sum(absolute_likes)+sum(absolute_dislikes)))*100,\n            pct.negative =(sum(absolute_dislikes)/(sum(absolute_likes)+sum(absolute_dislikes)))*100,\n            mg.post =sum(mg.comment)               \n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in group_by(., post_id): object 'comments.2022' not found\n```\n:::\n\n```{.r .cell-code}\ngrouped<-grouped%>%\n  mutate(mood.score = pct.positive/pct.negative)  \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., mood.score = pct.positive/pct.negative): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\ngrouped\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nclass(grouped$mg.post)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(grouped, mapping = aes(mg.post))+\n  geom_boxplot()  +\n  labs(title = \"Authors comments \", y = \"comments per post .per month\" )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(grouped, mapping = aes(mg.post)): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\ngrouped$mg.com<-  ifelse (grouped$mg.post>0, 1, 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(grouped$mg.post > 0, 1, 0): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\ngrouped$mg.com <- as.factor(grouped$mg.com)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'grouped' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(grouped, mapping = aes(y=mood.score, x=mg.com))+\n  geom_boxplot() \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(grouped, mapping = aes(y = mood.score, x = mg.com)): object 'grouped' not found\n```\n:::\n:::\n\n\n### \"post_id\"\n\nVariable allowing me to connect this dataset with another one with the\npost informnation,\n",
    "supporting": [
      "Final-Project-check_in_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}